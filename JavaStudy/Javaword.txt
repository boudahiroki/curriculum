ウォーターフォール開発
    全体の機能設計を済ませてから実装する手法。途中で仕様変更、追加が困難

アジャイル開発
    厳密な仕様を決めず小単位で実行→テストを繰り返し、徐々に開発する手法。全体のスケジュール管理が難しい。

マイグレーション
    データやプログラムを移動させること

デグレーション
    バグや不具合が復活していること。前より悪くなること

デプロイ
    プログラムを実際に使える状態にすること

コンフリクト
    複数のタスクが同じデータにアクセス仕様とすること。競合。

開発環境（ローカル）
    システムを開発するために必要な機材やソフトが揃った環境。

検証環境
    テスト環境。擬似本番環境。できるだけ本番に近い状態になっている環境。

本番環境
    出来上がった製品を稼働させて利用できる環境。実際にお客様が使っている環境。

設計書
    システムをどのように作るか書かれた資料。

要件定義
    実装すべき機能や満たすべき性能などのを明確にしていく作業。

基本設計
    要件定義をもとにしてシステムの概要を考える作業。

詳細設計
    基本設計をもとにして実際のプログラムが作れるようにシステムの詳細を考える作業。

単体テスト（UT）
    ユニット・テスト。それぞれの部品が動くかテストすること。

結合テスト（CT／IT）
    それぞれの機能を連結させて、システムとして動くかテストすること。

総合テスト（ST）
    システム・テスト。システム全体が満足に動くかテストすること。

エビデンス／証跡
    テストなどでシステムが正しく動作している、あるいは不具合が生じたことを示す証拠。

データパッチ
    システムに変更を加えるために用意された、後付けのプログラム。

Access
    システム、情報などを利用すること。

マクロ
    操作手順などを記録して、その記録した内容を自動的に実行させる機能。

VBA
    マイクロソフトが開発した言語。複雑な処理の自動化などを行なうことができる。

GAS（Google Apps Script）
    Googleが提供しているJavaScriptをベースにしたプログラミング言語。
    
API(Application Programming Interface)
    ソフトウェアにAPIという外部とやりとりする窓口を作り、外部アプリとコミュニケーションや連携ができる状態にする。

Web API
    インターネットの線を経由してやり取りする、その機能との窓口。

REST API
    RESTの考え方をWeb APIに適用したもの。（RESTとは同じURLで別の処理ができる考え方、getメソッドやpostメソッド等）

SOAP
    遠隔地にあるコンピューターのプログラムやデータにアクセスするための通信プロトコル（約束事）。

Ajax
    JavaScriptを使って非同期通信をすること。画面の一部だけ表示させたりできる。

XML
    拡張可能なマークアップ言語。htmlの親戚。データのやり取りや設定ファイルを書く時にも使われる。

JSON
    マークアップ言語の一つ。javascriptと相性が良い。

ステータスコード
    HTTPリクエストの結果を表す3桁の数字。400台はパソコン側が原因。500台はwebページ側が原因。

クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
    オリジン（プロトコル（https）+ドメイン（yahoo.co.jp）+ポートナンバー（443））で動いている
    Web アプリケーションに対して、別のオリジンのサーバーへのアクセスを許可できる仕組み。

バリデーション
    入力内容や記述内容が要件を満たしているか、妥当性を確認すること。

データ連携
    アプリケーションやシステム、格納先がそれぞれ異なるデータを、垣根を超えて共有・活用すること。

Daemon（デーモン）
    UNIX系のOS（LinuxやMac）における常駐プログラムの呼び名。

CRON
    UNIX系のOS（MacとかLinuxとか）に入っているプログラムのひとつ。プログラムの開始を予約することができる。

バッチ
    あるタイミングでまとめて処理すること。

ログ
    コンピュータにおける、やったことや起こったことの記録。

CSV
    カンマで分離した値。項目間が「,」で区切られている書式（CSV形式）のこと。

TSV
    タブで分離した値。項目間が「タブ」で区切られている書式（TSV形式）のこと。

プルリクエスト（マージリクエスト）
    開発者のローカルリポジトリでの変更を他の開発者に通知する機能。

asana
    チームメンバーがタスクを随時入力していくのクラウドツール。全体のプロジェクトや他の人のタスクを把握しやすい。

backlog
    マネージャー向けのプロジェクト管理ツール。進捗が見える化。フィードバックをまとめて管理できる。

Jooto
    チームメンバーのタスク、どの程度タスクを消化しているのかを管理することができるツール。

Readmine
    進捗管理や情報共有などができるシステム。基本的な操作や管理はWebブラウザを通じて行なう。

Trello
    付箋を貼ったりはがしたりするように、簡単にタスク管理できるツール。スマートホンと連携できる。

集中型
    一つのリポジトリにそれぞれ接続して使用する。

分散型
    それぞれがパソコン上にリポジトリを持ち、好きなタイミングでコミットできる。Gitもこれにあたる。

Github
    自分の作品を保存、公開、共有することができるようにしたウェブサービス。
    
Backlog    
    ヌーラボが提供しているSaaS型のプロジェクト管理ツール。

SourceTree
    ウインドウ操作でGitを簡単に操作することのできるGUIツール。日本語に対応している

Git Flow
    ブランチモデルの導入を簡単にする git プラグイン

master
    製品として出荷可能な状態。

release
    調整を行うブランチで、小さなバグ修正などが行われる。

develop
    次のリリースのための最新の開発作業の変更が反映されている状態。

feature
    追加機能などを行うブランチ。

FW
    フレームワークのこと。システム開発を楽に行えるように用意されたプログラムのひな形のこと。

Spring Framework
    Javaのフレームワーク。拡張や改善に優れ、また複雑なことをするにも必要な機能が備わっている。

Struts
    Javaのフレームワーク。2000年台に最も普及した。Apacheが開発した。

Java Server Faces
    Javaのフレームワーク。ユーザーに文字入力や回答を選択するボックスなどのユーザーインターフェースを作ることに特化している。

Bootstrap
    CSSのフレームワーク。Webサイト構築用のCSSひな形セット。無料で使える。

Flyway
    DBマイグレーションフレームワーク。複数人でのアプリケーション開発時のDBマイグレーション作業を素早く手軽に行うことができる。

Jackson
    Javaで使えるJSON（JavaScript Object Notation）ライブラリ。JSONオブジェクトをJavaオブジェクトにマップしたりその逆を行うことができる。

jQuery
    JavaScriptライブラリ。JavaScriptをより簡単な記法で実現できようにしたライブラリ。

Junit
    Javaで書かれたプログラムのテストを自動化するためのツール。

Log4j
    ログを出力するためのライブラリ。デバッグ情報やエラー情報などのログデータを出力する。

Lombok
    Javaのコードを簡潔にしてくれるオープンソースのライブラリ。

ORM
    オブジェクト関係マッピング。データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換する

ChatWork
    ビジネスコミュニケーションに特化したチャットツール。PDF・画像ファイル・ドキュメント等のビジネスシーンで利用するデータをアップロードできる

Slack
    SaaS型のビジネスチャットツール。後から入ってもログが追える。細かく検索できる等の特徴がある。

IP Messenger
    同一LAN環境内に閉じたメッセンジャー。外部サーバーへ接続しないため情報漏洩の危険が少ない。

javadoc
    Java言語のソースコードからドキュメントを生成する仕組み。jdkに付属している。

アノテーション
    あるデータに対して関連する情報（メタデータ）を注釈として付与すること。機械学習のモデルに学習させるための教師データを作成すること。

ヒープ
    コンピュータプログラムが利用するメモリ領域で実行時に任意のタイミングで確保や解放が可能なもの。

GC
    ガベージコレクション。不要になった領域を自動的に解放する機能。ゴミ集め、ゴミ拾いのこと。

GoF
    The Gang Of Four。オブジェクト指向プログラミングに役立つ23種類のデザインパターン。

デザインパターン
    ソフトウェアの設計時によくある問題とその典型的な解決策をまとめたもの。

オブジェクト指向
    部品化し、部品化された機能を組み合わせることで製品を完成させる考え方。

バッチ処理
    あるタイミングでまとめて実施される処理。

コンパイル
    プログラミング言語で書かれたコードを、コンピュータが実行可能なードに変換すること。

カバレッジ
    全体に対してカバーしているもしくはした範囲。

プラットホーム
    プログラムを動かすために必要な土台となる環境。